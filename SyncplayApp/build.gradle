plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 33
    buildToolsVersion "33.0.0"

    signingConfigs {
        github {
            storeFile file("${rootDir}/keystore/keystore.jks")
            keyAlias 'keystore  '
            keyPassword 'az90az09'
            storePassword 'az90az09'
        }
    }
    defaultConfig {
        applicationId "com.chromaticnoob.syncplay"
        minSdk 21
        targetSdk 32
        versionCode 100008000
        versionName "0.8.0"
        signingConfig signingConfigs.github
    }

    buildTypes {
        getByName("release") {
            minifyEnabled true
            shrinkResources = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        getByName("debug") {
            minifyEnabled false
            shrinkResources = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    /* All dependencies are mentioned in SyncplayUtils module's build.gradle */
    /* Why, you ask ? Because all our modules depend on that one module */
    /* And also, we don't have to mention the same dependencies over and over again in each module */
    //implementation files('libs/ColorPreference.aar') //Getting ColorPreference library
    implementation 'com.jaredrummler:colorpicker:1.1.0'
    implementation project(':SyncplayProtocol') //Deploying SyncplayProtocol
    implementation project(':SyncplayUtils') //Deploying our own toolkit

    /* As for importing the FFmpeg extension, we cannot add it in another module/submodule that
       represents an Android Library. An error would sho "Direct local .aar are not supported"
       To solve such issue, we just depend on the extension here.
     */
    implementation files('libs/ext.aar')
}